git - система контроля версий
github - сервис/платформа/сайт, предоставляющий хранилище для версий кода


sudo apt  install git - установка системы контроля версий
git --version - проверка версии

git config --global user.email "fnizamov88@gmail.com"
git config --global user.name "fnizamov"

git config --list - проверка настроек

ssh-keygen - создали ssh ключ

cat ~/.ssh/id_rsa.pub - получение ssh ключа

создаем репозиторий на github

переходим в папку с проектом
git init - превращает текущую директорию в git репозиторий
git remote add название_связи (обычно - origin) ссылку_на_удаленный_репозиторий (SSH: git@github:...)
git remote -v - просмотр списка удаленных репозиториев
git remote rm название_связи (обычно origin) - удаление связи с удаленным репозиторием

git status - проверка статуса файлов (отслеживаемые или нет)
git add название_файлов - отслеживание конкретных файлов
git add . - отслеживание всех файлов


git commit - создание коммита (версии/слепка кода)
git commit -m 'описание версии/внесенных изменений' - создание коммита с комментарием

git push название_связи (обычно - origin) название_ветки - отправка версий кода на удаленный репозиторий. Пример: git push origin master


git clone ссылку_на_удаленный_репозиторий - склонировать/скопировать/скачать удаленный репозиторий

git diff - просмотр внесенных изменений

git branch - вывод списка имеющихся веток в терминал (заездочкой помечается активная ветка)
git branch название_новой_ветки - создание новой ветки

git checkout название_ветки 
                            - переход на другую ветку
git switch название_ветки

git pull название_связи (обычно origin) название_ветки - стягивание изменений с удаленного репорзитория, с указанной ветки

git stash - спрятать локальные данные во временную область
git stash list - просмотр списка спрятанных данных
git stash apply - запись спрятанных данных/извлечение спрятанных данных
git stash drop - удаление спрятанных данных
git log - просмотр коммитов/версий
git log --oneline - компактное отображение коммитов